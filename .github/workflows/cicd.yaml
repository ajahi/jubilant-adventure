name: Go App CI/CD Pipeline

on:
  push:
    branches: [ main ]
  # pull_request:
  #   branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - production

env:
  ECR_REPOSITORY_PREFIX: docker-go
  AWS_REGION: us-east-1
  ECR_REGISTRY: 881490099618.dkr.ecr.us-east-1.amazonaws.com


jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'

      - name: Run tests
        continue-on-error: true #turn into false to fail the pipeline
        run: go test -v ./... #no test cases for now.
    
  build-and-push:
    name: Build and Push to ECR
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      
      - name: Set environment variables
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/main' || ${{ github.event.inputs.environment }} == 'production' ]]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
            echo "ECR_REPOSITORY=docker-go-prod" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=development" >> $GITHUB_ENV
            echo "ECR_REPOSITORY=docker-go-dev" >> $GITHUB_ENV
          fi
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Build and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build the Docker image
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
          
          # Push the Docker image
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          
          echo "Pushed image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

# deploy:
#     name: Deploy
#     needs: build-and-push
#     runs-on: ubuntu-latest
#     steps:
#       - name: pull docker-image
#         run: |
#           # docker pull form ecr 
#           # docker-compose up -d

  notify:
    name: Send Email Notification
    # needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Determine Environment
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/main' || ${{ github.event.inputs.environment }} == 'production' ]]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=development" >> $GITHUB_ENV
          fi
      
      - name: Send email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Go App Deployment - ${{ env.ENVIRONMENT }} Environment
          body: |
            The Go application has been successfully deployed to the ${{ env.ENVIRONMENT }} environment.
            
            Branch: ${{ github.ref_name }}
            Commit: ${{ github.sha }}
            
            Check the workflow run here: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ secrets.NOTIFICATION_EMAIL }}
          from: GitHub Actions
          secure: true
